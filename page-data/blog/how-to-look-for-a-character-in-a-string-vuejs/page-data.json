{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/how-to-look-for-a-character-in-a-string-vuejs/",
    "result": {"data":{"markdownRemark":{"excerpt":"Hi Friends üëã, Welcome To SortoutCode! ‚ù§Ô∏è To look for a character in the sting in VueJS. We are going to use  and  methods to find the character in the string‚Ä¶","html":"<p>Hi Friends üëã,</p>\n<p>Welcome To SortoutCode! ‚ù§Ô∏è</p>\n<p>To look for a character in the sting in VueJS. We are going to use <code class=\"language-text\">search()</code> and <code class=\"language-text\">indexOf()</code> methods to find the character in the string in VueJS.</p>\n<h2>Short solution</h2>\n<p><code class=\"language-text\">parentComp.vue</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> message <span class=\"token operator\">=</span> <span class=\"token string\">'Hii, This is Sortoutcode'</span><span class=\"token punctuation\">;</span>\n\nmessage<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sortoutcode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 13</span>\n\nmessage<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sortoutcode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 13</span></code></pre></div>\n<p>Today, I am going to show you <strong>How you look for the character from a string in VueJS?</strong></p>\n<p>Table of Content</p>\n<ul>\n<li>Setup the Vue (Optional)</li>\n<li>Create FirstComponent.vue and import it into App.js</li>\n<li>How to look for characters in string?</li>\n</ul>\n<p>This article will guide you to <strong>How do I look for the character from a string in vueJS</strong>.</p>\n<h2>Setup the Vue.js</h2>\n<p>First, we have to install the Vue project, I had installed the vueJS in my system. If you haven‚Äôt installed or have any problem with installation you can follow this article, it will show you step by step process of installation.</p>\n<p><a href=\"/blog/how-to-setup-vuejs-project/\" target=\"_BLANK\">How to Install the VueJS project?</a></p>\n<h2>Create FirstComponent.vue and import it into App.js</h2>\n<p>Create the new component in the <code class=\"language-text\">src/components/</code> components folder. The component name is <code class=\"language-text\">FirstComponent.vue</code> and imported into the <code class=\"language-text\">App.js</code> file:</p>\n<p><code class=\"language-text\">App.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>FirstComp <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> FirstComp <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/FirstComp.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"App\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">FirstComp</span><span class=\"token operator\">:</span> FirstComp<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n#app <span class=\"token punctuation\">{</span>\n  font<span class=\"token operator\">-</span>family<span class=\"token operator\">:</span> Avenir<span class=\"token punctuation\">,</span> Helvetica<span class=\"token punctuation\">,</span> Arial<span class=\"token punctuation\">,</span> sans<span class=\"token operator\">-</span>serif<span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">-</span>webkit<span class=\"token operator\">-</span>font<span class=\"token operator\">-</span>smoothing<span class=\"token operator\">:</span> antialiased<span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">-</span>moz<span class=\"token operator\">-</span>osx<span class=\"token operator\">-</span>font<span class=\"token operator\">-</span>smoothing<span class=\"token operator\">:</span> grayscale<span class=\"token punctuation\">;</span>\n  text<span class=\"token operator\">-</span>align<span class=\"token operator\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> #2c3e50<span class=\"token punctuation\">;</span>\n  margin<span class=\"token operator\">-</span>top<span class=\"token operator\">:</span> 60px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<h2>How to look for characters in string?</h2>\n<p>To search the character from the string. We are going to use the <code class=\"language-text\">search()</code> and <code class=\"language-text\">indexOf()</code> methods. These methods return the position of the first occurrence of a value in a string. If these methods return the <code class=\"language-text\">-1</code> that means the value is not found and also these methods are case sensitive.</p>\n<p>Let‚Äôs take a short example to better understand.</p>\n<p><code class=\"language-text\">FirstComp.vue</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Welcome to Sortoutcode<span class=\"token punctuation\">.</span>com<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>String <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"serchoutput\"</span><span class=\"token operator\">></span>Result using <span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> method <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> serchoutput <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>p v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"indexoutput\"</span><span class=\"token operator\">></span>Result using <span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> method <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> indexoutput <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>button @click<span class=\"token operator\">=</span><span class=\"token string\">\"findCharater\"</span><span class=\"token operator\">></span>Find<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"FirstComp\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hii, This is Sortoutcode\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">serchoutput</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">indexoutput</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">findCharater</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serchoutput <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sortoutcode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>indexoutput <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sortoutcode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>For now, let‚Äôs check the output.</p>\n<h2>Output</h2>\n<p><img src=\"https://raw.githubusercontent.com/sortoutcode/sortoutcode-images/main/search-for-duplicate-character-in-string-in-vuejs.gif\" alt=\"search character from string\"></p>\n<h2>Links</h2>\n<p>Here, is the above program code sandbox link of how to look at the character in a string in vue js. Then you can use it whenever you went and do the changes as per your requirements.</p>\n<p><a href=\"https://codesandbox.io/s/sortoutcode-check-for-character-in-string-in-vuejs-xe7fpk\" target=\"_blank\">Codesandbox</a></p>\n<p>All the best üëç.</p>","frontmatter":{"title":"How to look for a character from a string in VueJS?","tags":["Vue"],"date":"April 09, 2023","description":"Example of looking for a character in a string step by step in VueJS - sortoutcode","social_image":""}},"prev":{"frontmatter":{"title":"How to display data in textarea in VueJS?"},"fields":{"slug":"/blog/how-to-display-data-in-textarea-in-vuejs/"}},"next":{"frontmatter":{"title":"How to use localStorage in VueJS?"},"fields":{"slug":"/blog/how-to-use-localStorage-in-vuejs/"}}},"pageContext":{"slug":"/blog/how-to-look-for-a-character-in-a-string-vuejs/","prevSlug":"/blog/how-to-display-data-in-textarea-in-vuejs/","nextSlug":"/blog/how-to-use-localStorage-in-vuejs/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}